{"version":3,"file":"magic-string.es-ea239598.js","sources":["../../../../node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","../../../../node_modules/magic-string/dist/magic-string.es.mjs"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.sourcemapCodec = {}));\n})(this, (function (exports) { 'use strict';\n\n    const comma = ','.charCodeAt(0);\n    const semicolon = ';'.charCodeAt(0);\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    const intToChar = new Uint8Array(64); // 64 possible chars.\n    const charToInt = new Uint8Array(128); // z is 122 in ASCII\n    for (let i = 0; i < chars.length; i++) {\n        const c = chars.charCodeAt(i);\n        intToChar[i] = c;\n        charToInt[c] = i;\n    }\n    // Provide a fallback for older environments.\n    const td = typeof TextDecoder !== 'undefined'\n        ? /* #__PURE__ */ new TextDecoder()\n        : typeof Buffer !== 'undefined'\n            ? {\n                decode(buf) {\n                    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                    return out.toString();\n                },\n            }\n            : {\n                decode(buf) {\n                    let out = '';\n                    for (let i = 0; i < buf.length; i++) {\n                        out += String.fromCharCode(buf[i]);\n                    }\n                    return out;\n                },\n            };\n    function decode(mappings) {\n        const state = new Int32Array(5);\n        const decoded = [];\n        let index = 0;\n        do {\n            const semi = indexOf(mappings, index);\n            const line = [];\n            let sorted = true;\n            let lastCol = 0;\n            state[0] = 0;\n            for (let i = index; i < semi; i++) {\n                let seg;\n                i = decodeInteger(mappings, i, state, 0); // genColumn\n                const col = state[0];\n                if (col < lastCol)\n                    sorted = false;\n                lastCol = col;\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                    i = decodeInteger(mappings, i, state, 2); // sourceLine\n                    i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                    if (hasMoreVlq(mappings, i, semi)) {\n                        i = decodeInteger(mappings, i, state, 4); // namesIndex\n                        seg = [col, state[1], state[2], state[3], state[4]];\n                    }\n                    else {\n                        seg = [col, state[1], state[2], state[3]];\n                    }\n                }\n                else {\n                    seg = [col];\n                }\n                line.push(seg);\n            }\n            if (!sorted)\n                sort(line);\n            decoded.push(line);\n            index = semi + 1;\n        } while (index <= mappings.length);\n        return decoded;\n    }\n    function indexOf(mappings, index) {\n        const idx = mappings.indexOf(';', index);\n        return idx === -1 ? mappings.length : idx;\n    }\n    function decodeInteger(mappings, pos, state, j) {\n        let value = 0;\n        let shift = 0;\n        let integer = 0;\n        do {\n            const c = mappings.charCodeAt(pos++);\n            integer = charToInt[c];\n            value |= (integer & 31) << shift;\n            shift += 5;\n        } while (integer & 32);\n        const shouldNegate = value & 1;\n        value >>>= 1;\n        if (shouldNegate) {\n            value = -0x80000000 | -value;\n        }\n        state[j] += value;\n        return pos;\n    }\n    function hasMoreVlq(mappings, i, length) {\n        if (i >= length)\n            return false;\n        return mappings.charCodeAt(i) !== comma;\n    }\n    function sort(line) {\n        line.sort(sortComparator);\n    }\n    function sortComparator(a, b) {\n        return a[0] - b[0];\n    }\n    function encode(decoded) {\n        const state = new Int32Array(5);\n        const bufLength = 1024 * 16;\n        const subLength = bufLength - 36;\n        const buf = new Uint8Array(bufLength);\n        const sub = buf.subarray(0, subLength);\n        let pos = 0;\n        let out = '';\n        for (let i = 0; i < decoded.length; i++) {\n            const line = decoded[i];\n            if (i > 0) {\n                if (pos === bufLength) {\n                    out += td.decode(buf);\n                    pos = 0;\n                }\n                buf[pos++] = semicolon;\n            }\n            if (line.length === 0)\n                continue;\n            state[0] = 0;\n            for (let j = 0; j < line.length; j++) {\n                const segment = line[j];\n                // We can push up to 5 ints, each int can take at most 7 chars, and we\n                // may push a comma.\n                if (pos > subLength) {\n                    out += td.decode(sub);\n                    buf.copyWithin(0, subLength, pos);\n                    pos -= subLength;\n                }\n                if (j > 0)\n                    buf[pos++] = comma;\n                pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n                if (segment.length === 1)\n                    continue;\n                pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n                pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n                pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n                if (segment.length === 4)\n                    continue;\n                pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n            }\n        }\n        return out + td.decode(buf.subarray(0, pos));\n    }\n    function encodeInteger(buf, pos, state, segment, j) {\n        const next = segment[j];\n        let num = next - state[j];\n        state[j] = next;\n        num = num < 0 ? (-num << 1) | 1 : num << 1;\n        do {\n            let clamped = num & 0b011111;\n            num >>>= 5;\n            if (num > 0)\n                clamped |= 0b100000;\n            buf[pos++] = intToChar[clamped];\n        } while (num > 0);\n        return pos;\n    }\n\n    exports.decode = decode;\n    exports.encode = encode;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=sourcemap-codec.umd.js.map\n","import { encode } from '@jridgewell/sourcemap-codec';\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nfunction getBtoa () {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : (options.file || '')],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument'\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nclass Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`'\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n\nexport { Bundle, SourceMap, MagicString as default };\n//# sourceMappingURL=magic-string.es.mjs.map\n"],"names":["global","factory","exports","this","comma","semicolon","chars","intToChar","charToInt","i","c","td","buf","out","decode","mappings","state","decoded","index","semi","indexOf","line","sorted","lastCol","seg","decodeInteger","col","hasMoreVlq","sort","idx","pos","j","value","shift","integer","shouldNegate","length","sortComparator","b","encode","bufLength","subLength","sub","segment","encodeInteger","next","num","clamped","BitSet","arg","n","Chunk","start","end","content","chunk","fn","storeName","contentOnly","sliceIndex","originalBefore","originalAfter","newChunk","rx","trimmed","getBtoa","str","btoa","SourceMap","properties","guessIndent","code","lines","tabbed","spaced","min","previous","current","numSpaces","getRelativePath","from","to","fromParts","toParts","toString","isObject","thing","getLocator","source","originalLines","lineOffsets","m","column","Mappings","hires","sourceIndex","loc","nameIndex","original","sourcemapLocations","originalCharIndex","first","warned","MagicString","string","options","char","cloned","originalChunk","clonedChunk","nextOriginalChunk","nextClonedChunk","names","locate","indentStr","pattern","isExcluded","exclusion","shouldIndentNextCharacter","replacer","match","charIndex","last","oldLeft","oldRight","newRight","newLeft","overwrite","lineIndex","lineStr","result","startChunk","containsEnd","sliceStart","sliceEnd","clone","searchForward","charType","aborted","searchValue","replacement","getReplacement","_","matchAll","re","matches","stringLength","hasOwnProp","Bundle","option","uniqueSource","bundle","x_google_ignoreList","name","magicString","indentStringCounts","a","trailingNewline","separator","indentStart","body"],"mappings":"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","x_google_ignoreList":[0,1]}
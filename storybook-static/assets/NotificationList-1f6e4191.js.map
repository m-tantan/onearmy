{"version":3,"file":"NotificationList-1f6e4191.js","sources":["../../src/NotificationList/NotificationList.tsx"],"sourcesContent":["import { useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Box, Card, Text } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { NotificationItem } from '../NotificationItem/NotificationItem'\n\nimport type { UserNotificationItem } from '../NotificationItem/NotificationItem'\n\nexport type UserNotificationList = UserNotificationItem[]\n\nexport interface Props {\n  notifications: UserNotificationList\n  sx?: any\n  markAllRead?: () => void\n  markAllNotified?: () => void\n}\n\nconst ModalItem = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  color: #000;\n  padding: 10px 30px 10px 30px;\n  text-align: center;\n  width: 100%;\n  }\n`\n\nexport const NotificationList = (props: Props) => {\n  const { notifications, markAllRead, markAllNotified } = props\n  const sx = props.sx || {}\n  useEffect(() => {\n    notifications.length && markAllNotified && markAllNotified()\n  }, [notifications, markAllNotified])\n\n  return (\n    <Card sx={{ padding: 2, maxHeight: 310, overflowY: 'auto', ...sx }}>\n      {notifications.length ? (\n        <>\n          <ModalItem style={{ textAlign: 'center' }}>Notifications</ModalItem>\n          {notifications.map((notification, idx) => (\n            <NotificationItem\n              key={idx}\n              {...(notification as any)}\n            ></NotificationItem>\n          ))}\n          <Button\n            style={{\n              width: '100%',\n              textAlign: 'center',\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n            variant={'secondary'}\n            data-cy=\"clear-notifications\"\n            onClick={() => markAllRead && markAllRead()}\n          >\n            Clear notifications\n          </Button>\n        </>\n      ) : (\n        <Text\n          sx={{ display: 'block', textAlign: 'center' }}\n          data-cy=\"NotificationList: empty state\"\n        >\n          Nada, no new notifications\n        </Text>\n      )}\n    </Card>\n  )\n}\n"],"names":["ModalItem","styled","Box","NotificationList","props","notifications","markAllRead","markAllNotified","sx","useEffect","jsx","Card","jsxs","Fragment","notification","idx","NotificationItem","Button","Text"],"mappings":"qUAkBA,MAAAA,EAAAC,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUOC,EAAAC,GAAA,CACL,KAAA,CAAA,cAAAC,EAAA,YAAAC,EAAA,gBAAAC,CAAA,EAAAH,EACAI,EAAAJ,EAAA,IAAA,GACAK,OAAAA,EAAAA,UAAA,IAAA,CACEJ,EAAA,QAAAE,GAAAA,GAA2D,EAAA,CAAAF,EAAAE,CAAA,CAAA,EAG7DG,EAAAC,EAAA,CAAA,GAAA,CAAA,QAAA,EAAA,UAAA,IAAA,UAAA,OAAA,GAAAH,CAAA,EAAA,SAAAH,EAAA,OAAAO,EAAAC,EAAA,CAAA,SAAA,CAIQH,EAAAV,EAAA,CAAA,MAAA,CAAA,UAAA,QAAA,EAAA,SAAA,gBAAA,EAAwDK,EAAA,IAAA,CAAAS,EAAAC,IAAAL,EAEtDM,EAAC,CAAA,GAAAF,CAEM,EAAAC,CADA,CAAA,EAGRL,EACDO,EAAC,CAAA,MAAA,CACQ,MAAA,OACE,UAAA,SACI,QAAA,OACF,eAAA,QACO,EAClB,QAAA,YACS,UAAA,sBACD,QAAA,IAAAX,GAAAA,EAAA,EACkC,SAAA,qBAC3C,CAAA,CAED,CAAA,CAAA,EAAAI,EAGFQ,EAAC,CAAA,GAAA,CAAA,QAAA,QAAA,UAAA,QAAA,EAC6C,UAAA,gCACpC,SAAA,4BACT,CAAA,CAAA,CAAA,CAMT"}
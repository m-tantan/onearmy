import{a as n}from"./jsx-runtime-913be41c.js";import{f as o}from"./utils-1b1bed3d.js";import{h as i}from"./UserEngagementWrapper-ec2ba458.js";import"./index-2506bfc3.js";import"./index-a7768622.js";import"./Button-82517beb.js";import"./Icon-976e5b12.js";import"./theme-ui-core-jsx-runtime.esm-9bc3c749.js";import"./emotion-element-6a883da9.browser.esm-becb4ad2.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-11801e73.js";import"./hoist-non-react-statics.cjs-dd442a32.js";import"./theme-ui-css.esm-a1197288.js";import"./emotion-styled.browser.esm-935c8bd8.js";import"./icon-verified-badge-3c009cbf.js";import"./icon-arrow-down-33f070d5.js";import"./icon-star-active-309631d9.js";import"./theme-ui-components.esm-784287e5.js";import"./emotion-react.browser.esm-ac7fc07b.js";import"./ButtonShowReplies-82375f64.js";import"./Category-63547a40.js";import"./CreateComment-ddd005ff.js";import"./index-54304c9c.js";import"./index-0dfb046a.js";import"./index-150eb7c2.js";import"./MemberBadge-a0c54109.js";import"./ExternalLink-299075d0.js";import"./Select-747e2260.js";import"./isNativeReflectConstruct-7f9e7527.js";import"./ElWithBeforeIcon-bfad359c.js";import"./FieldDatepicker-3af30642.js";import"./FieldInput-bd380294.js";import"./CharacterCount-ef389ffa.js";import"./FieldTextarea-e3037ee5.js";import"./Username-259912a7.js";import"./index-4d501b15.js";import"./InternalLink-53f45de4.js";import"./GlobalStyles-6382182d.js";import"./ImageGallery-1214bdcd.js";import"./iframe-b5fb84a4.js";import"../sb-preview/runtime.js";import"./Loader-c7b129e8.js";import"./MapMemberCard-577ffa07.js";import"./Modal-edae582c.js";import"./ModerationStatus-3b9fa1d2.js";import"./MoreContainer-58244bef.js";import"./NotificationItem-371058fe.js";import"./NotificationList-1f6e4191.js";import"./OsmGeocoding-362e7475.js";import"./ProfileLink-fd0a19e7.js";import"./ResearchEditorOverview-2f92ab3e.js";import"./Tag-8d5370f1.js";import"./TextNotification-2d34cd0a.js";import"./Tooltip-60f84766.js";import"./UserStatistics-55370718.js";import"./VideoPlayer-dda4aebe.js";import"./BlockedRoute-9a43b7fd.js";import"./TabbedContent-f42af098.js";import"./DiscussionTitle-b470b4e1.js";import"./IconCountWithTooltip-54528809.js";import"./inheritsLoose-0022215d.js";const xe={title:"Components/CommentList/CommentContainer",component:i},t=()=>{const e=o();return n(i,{supportReplies:!1,comment:e,handleDelete:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),isLoggedIn:!0,maxLength:100})},r=()=>{const e=o(),s=o({replies:[e]});return n(i,{supportReplies:!0,comment:s,handleDelete:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),isLoggedIn:!0,maxLength:100})},m=()=>{const e=Array(15).fill(0).map(o),s=o({replies:e});return n(i,{supportReplies:!0,comment:s,handleDelete:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),isLoggedIn:!0,maxLength:100})};var p,a,l;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`() => {
  const comment = fakeComment();
  return <CommentContainer supportReplies={false} comment={comment} handleDelete={() => Promise.resolve()} handleEdit={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} isLoggedIn={true} maxLength={100} />;
}`,...(l=(a=t.parameters)==null?void 0:a.docs)==null?void 0:l.source}}};var d,c,u;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`() => {
  const reply = fakeComment();
  const comment = fakeComment({
    replies: [reply]
  });
  return <CommentContainer supportReplies={true} comment={comment} handleDelete={() => Promise.resolve()} handleEdit={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} isLoggedIn={true} maxLength={100} />;
}`,...(u=(c=r.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var h,g,C;m.parameters={...m.parameters,docs:{...(h=m.parameters)==null?void 0:h.docs,source:{originalSource:`() => {
  const replies = Array(15).fill(0).map(fakeComment);
  const comment = fakeComment({
    replies
  });
  return <CommentContainer supportReplies={true} comment={comment} handleDelete={() => Promise.resolve()} handleEdit={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} isLoggedIn={true} maxLength={100} />;
}`,...(C=(g=m.parameters)==null?void 0:g.docs)==null?void 0:C.source}}};const De=["Default","WithReplies","WithLotsReplies"];export{t as Default,m as WithLotsReplies,r as WithReplies,De as __namedExportsOrder,xe as default};
//# sourceMappingURL=CommentContainer.stories-5844d3bf.js.map
